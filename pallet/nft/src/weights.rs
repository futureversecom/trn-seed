
//! Autogenerated weights for pallet_nft
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Xiankuns-MBP-2`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_nft
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output/pallet_nft_weights.rs
// --template
// ./scripts/pallet_template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_nft.
pub trait WeightInfo {
	fn claim_unowned_collection() -> Weight;
	fn set_owner() -> Weight;
	fn set_max_issuance() -> Weight;
	fn set_base_uri() -> Weight;
	fn register_marketplace() -> Weight;
	fn create_collection() -> Weight;
	fn mint() -> Weight;
	fn transfer() -> Weight;
	fn burn() -> Weight;
	fn sell() -> Weight;
	fn buy() -> Weight;
	fn auction() -> Weight;
	fn bid() -> Weight;
	fn cancel_sale() -> Weight;
	fn update_fixed_price() -> Weight;
	fn make_simple_offer() -> Weight;
	fn cancel_offer() -> Weight;
	fn accept_offer() -> Weight;
}

/// Weights for pallet_nft using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn claim_unowned_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(15_000_000, 3849)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3849)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_max_issuance() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3849)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_base_uri() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 3849)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft NextMarketplaceId (r:1 w:1)
	/// Proof Skipped: Nft NextMarketplaceId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft RegisteredMarketplaces (r:0 w:1)
	/// Proof Skipped: Nft RegisteredMarketplaces (max_values: None, max_size: None, mode: Measured)
	fn register_marketplace() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `257`
		//  Estimated: `1999`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 1999)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Nft NextCollectionId (r:1 w:1)
	/// Proof Skipped: Nft NextCollectionId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EVM AccountCodes (r:1 w:1)
	/// Proof Skipped: EVM AccountCodes (max_values: None, max_size: None, mode: Measured)
	/// Storage: Futurepass DefaultProxy (r:1 w:0)
	/// Proof: Futurepass DefaultProxy (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft CollectionInfo (r:0 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn create_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `310`
		//  Estimated: `12974`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(30_000_000, 12974)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 3849)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `7698`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(21_000_000, 7698)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `7698`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 7698)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextListingId (r:1 w:1)
	/// Proof Skipped: Nft NextListingId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Listings (r:0 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn sell() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `10731`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 10731)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Nft TokenLocks (r:0 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn buy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1067`
		//  Estimated: `22012`
		// Minimum execution time: 73_000_000 picoseconds.
		Weight::from_parts(74_000_000, 22012)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextListingId (r:1 w:1)
	/// Proof Skipped: Nft NextListingId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Listings (r:0 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn auction() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `10731`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(36_000_000, 10731)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingWinningBid (r:1 w:1)
	/// Proof Skipped: Nft ListingWinningBid (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft ListingEndSchedule (r:0 w:2)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	fn bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1088`
		//  Estimated: `30011`
		// Minimum execution time: 86_000_000 picoseconds.
		Weight::from_parts(89_000_000, 30011)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:0 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn cancel_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `379`
		//  Estimated: `4981`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(20_000_000, 4981)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	fn update_fixed_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `379`
		//  Estimated: `3844`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3844)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextOfferId (r:1 w:1)
	/// Proof Skipped: Nft NextOfferId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Offers (r:0 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	fn make_simple_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1004`
		//  Estimated: `34126`
		// Minimum execution time: 76_000_000 picoseconds.
		Weight::from_parts(77_000_000, 34126)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Nft Offers (r:1 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	fn cancel_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1231`
		//  Estimated: `26618`
		// Minimum execution time: 70_000_000 picoseconds.
		Weight::from_parts(71_000_000, 26618)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Nft Offers (r:1 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn accept_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1386`
		//  Estimated: `36630`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(101_000_000, 36630)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn claim_unowned_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(15_000_000, 3849)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3849)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_max_issuance() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3849)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn set_base_uri() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 3849)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft NextMarketplaceId (r:1 w:1)
	/// Proof Skipped: Nft NextMarketplaceId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft RegisteredMarketplaces (r:0 w:1)
	/// Proof Skipped: Nft RegisteredMarketplaces (max_values: None, max_size: None, mode: Measured)
	fn register_marketplace() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `257`
		//  Estimated: `1999`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 1999)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Nft NextCollectionId (r:1 w:1)
	/// Proof Skipped: Nft NextCollectionId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EVM AccountCodes (r:1 w:1)
	/// Proof Skipped: EVM AccountCodes (max_values: None, max_size: None, mode: Measured)
	/// Storage: Futurepass DefaultProxy (r:1 w:0)
	/// Proof: Futurepass DefaultProxy (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft CollectionInfo (r:0 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn create_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `310`
		//  Estimated: `12974`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(30_000_000, 12974)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `3849`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 3849)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `7698`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(21_000_000, 7698)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `7698`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 7698)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextListingId (r:1 w:1)
	/// Proof Skipped: Nft NextListingId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Listings (r:0 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn sell() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `10731`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 10731)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Nft TokenLocks (r:0 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn buy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1067`
		//  Estimated: `22012`
		// Minimum execution time: 73_000_000 picoseconds.
		Weight::from_parts(74_000_000, 22012)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextListingId (r:1 w:1)
	/// Proof Skipped: Nft NextListingId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Listings (r:0 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn auction() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `386`
		//  Estimated: `10731`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(36_000_000, 10731)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingWinningBid (r:1 w:1)
	/// Proof Skipped: Nft ListingWinningBid (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft ListingEndSchedule (r:0 w:2)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	fn bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1088`
		//  Estimated: `30011`
		// Minimum execution time: 86_000_000 picoseconds.
		Weight::from_parts(89_000_000, 30011)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:0 w:1)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft ListingEndSchedule (r:0 w:1)
	/// Proof Skipped: Nft ListingEndSchedule (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft OpenCollectionListings (r:0 w:1)
	/// Proof Skipped: Nft OpenCollectionListings (max_values: None, max_size: None, mode: Measured)
	fn cancel_sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `379`
		//  Estimated: `4981`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(20_000_000, 4981)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Nft Listings (r:1 w:1)
	/// Proof Skipped: Nft Listings (max_values: None, max_size: None, mode: Measured)
	fn update_fixed_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `379`
		//  Estimated: `3844`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 3844)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Nft CollectionInfo (r:1 w:0)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft NextOfferId (r:1 w:1)
	/// Proof Skipped: Nft NextOfferId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft Offers (r:0 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	fn make_simple_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1004`
		//  Estimated: `34126`
		// Minimum execution time: 76_000_000 picoseconds.
		Weight::from_parts(77_000_000, 34126)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Nft Offers (r:1 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	fn cancel_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1231`
		//  Estimated: `26618`
		// Minimum execution time: 70_000_000 picoseconds.
		Weight::from_parts(71_000_000, 26618)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Nft Offers (r:1 w:1)
	/// Proof Skipped: Nft Offers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:1 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetsExt Holds (r:1 w:1)
	/// Proof: AssetsExt Holds (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(162), added: 2637, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(90), added: 2565, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft TokenOffers (r:1 w:1)
	/// Proof Skipped: Nft TokenOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn accept_offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1386`
		//  Estimated: `36630`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(101_000_000, 36630)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
}
