//! Autogenerated weights for pallet_validator_set
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `Surangas-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_validator_set
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template
// ./scripts/pallet_template.hbs
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_validator_set.
pub trait WeightInfo {
	fn finalise_validator_set_change() -> Weight;
	fn set_xrpl_door_signers() -> Weight;
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: ValidatorSet XrplDoorSigners (r:2 w:0)
	// Storage: ValidatorSet NotarySetId (r:1 w:1)
	// Storage: System Digest (r:1 w:1)
	// Storage: ValidatorSet ValidatorsChangeInProgress (r:0 w:1)
	// Storage: ValidatorSet NotaryXrplKeys (r:0 w:1)
	// Storage: ValidatorSet NotaryKeys (r:0 w:1)
	// Storage: Ethy EthyState (r:0 w:1)
	fn finalise_validator_set_change() -> Weight {
		(32_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
	}
	// Storage: ValidatorSet NotaryKeys (r:1 w:0)
	// Storage: ValidatorSet XrplDoorSigners (r:1 w:1)
	// Storage: ValidatorSet NotaryXrplKeys (r:0 w:1)
	fn set_xrpl_door_signers() -> Weight {
		(16_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}
