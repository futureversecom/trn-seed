//! Autogenerated weights for pallet_token_approvals
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-117-113`, CPU: `Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-token-approvals
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template
// ./pallet_template.hbs
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_token_approvals.
pub trait WeightInfo {
	fn erc721_approval() -> Weight;
	fn erc721_remove_approval() -> Weight;
	fn erc20_approval() -> Weight;
	fn erc20_update_approval() -> Weight;
	fn erc721_approval_for_all() -> Weight;
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Nft CollectionInfo (r:1 w:0)
	// Storage: TokenApprovals ERC721ApprovalsForAll (r:1 w:0)
	// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	fn erc721_approval() -> Weight {
		(30_604_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: TokenApprovals ERC721Approvals (r:1 w:1)
	// Storage: Nft CollectionInfo (r:1 w:0)
	fn erc721_remove_approval() -> Weight {
		(29_222_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: TokenApprovals ERC20Approvals (r:0 w:1)
	fn erc20_approval() -> Weight {
		(16_484_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: TokenApprovals ERC20Approvals (r:1 w:1)
	fn erc20_update_approval() -> Weight {
		(23_802_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: TokenApprovals ERC721ApprovalsForAll (r:0 w:1)
	fn erc721_approval_for_all() -> Weight {
		(16_136_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
