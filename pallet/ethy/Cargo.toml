[package]
name = "pallet-ethy"
version = "1.0.1"
description = "Pallet for bridging Ethereum events"
edition.workspace = true
authors.workspace = true
license.workspace = true

[dependencies]
codec = { workspace = true }
ethabi = { workspace = true }
ethereum-types = { workspace = true }
ethereum = { workspace = true, default-features = false }
hex-literal = { workspace = true }
rustc-hex = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }

# Substrate packages
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
sp-application-crypto = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

seed-primitives = { workspace = true }
seed-pallet-common = { workspace = true }
pallet-ethereum = { workspace = true }
fp-rpc = { workspace = true }

[dev-dependencies]
parking_lot = { workspace = true }
sp-core = { workspace = true }
sp-keystore = { workspace = true }
pallet-assets-ext = { workspace = true, default-features = true }
pallet-balances = { workspace = true }
pallet-assets = { workspace = true }
pallet-scheduler = { workspace = true }

[features]
default = ["std"]
std = [
	"codec/std",
	"ethereum/std",
	"ethereum-types/std",
	"rustc-hex/std",
	"scale-info/std",
	"serde_json/std",
	"frame-support/std",
	"frame-system/std",
	"sp-application-crypto/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std",
	"seed-primitives/std",
	"seed-pallet-common/std",
	"fp-rpc/std",
	"pallet-ethereum/std",
]
runtime-benchmarks = ["frame-benchmarking"]
try-runtime = ["frame-support/try-runtime"]

# When enabled, integrate with Frontier storages in on_finalize to expose pallet-origin EVM logs
# to Ethereum RPC (eth_getLogs). This requires pallet-ethereum in the runtime implementing this
# pallet. Disabled by default to keep unit tests lightweight.
frontier-logs = []
