//! Autogenerated weights for pallet_erc20_peg
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-117-113`, CPU: `Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-erc20-peg
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template
// ./pallet_template.hbs
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_erc20_peg.
pub trait WeightInfo {
	fn activate_deposits() -> Weight;
	fn activate_withdrawals() -> Weight;
	fn withdraw() -> Weight;
	fn set_contract_address() -> Weight;
	fn set_erc20_meta() -> Weight;
	fn set_payment_delay() -> Weight;
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Erc20Peg DepositsActive (r:0 w:1)
	fn activate_deposits() -> Weight {
		(10_828_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:0 w:1)
	fn activate_withdrawals() -> Weight {
		(10_707_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:1 w:0)
	// Storage: Erc20Peg AssetIdToErc20 (r:1 w:0)
	// Storage: Erc20Peg PaymentDelay (r:1 w:0)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: Erc20Peg ContractAddress (r:1 w:0)
	// Storage: EthBridge NextEventProofId (r:1 w:1)
	// Storage: EthBridge NotaryKeys (r:1 w:0)
	// Storage: EthBridge NotarySetId (r:1 w:0)
	// Storage: EthBridge BridgePaused (r:1 w:0)
	// Storage: System Digest (r:1 w:1)
	fn withdraw() -> Weight {
		(142_401_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(11 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Erc20Peg ContractAddress (r:0 w:1)
	fn set_contract_address() -> Weight {
		(31_564_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg Erc20Meta (r:0 w:1)
	fn set_erc20_meta() -> Weight {
		(13_688_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg PaymentDelay (r:0 w:1)
	fn set_payment_delay() -> Weight {
		(32_305_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
