version: '3'
services:
  bootnode:
    image: "ghcr.io/futureversecom/fork-release-state-${NETWORK:-root}"
    # image: zeeshans/seed:live-state-root
    command:
      - "/output/binary"
      - "--chain=/output/fork.json"
      - "--name=bootnode"
      - "--validator"
      - "--alice"
      - "--tmp"
      - "--unsafe-rpc-external"
      - "--rpc-cors=all"
      - "--rpc-port=9944"
      - "--node-key=0000000000000000000000000000000000000000000000000000000000000001"
    deploy:
      resources:
        reservations:
          cpus: "0.1"
          memory: "512M"
        limits:
          cpus: "1"
          memory: "2512M"
    labels:
      # RPC config
      # - "traefik.http.routers.bootnode-rpc.rule=(Host(`127.0.0.1`) || Host(`devnet.cicd.rootnet.app`)) && PathPrefix(`/`)"
      - "traefik.http.routers.bootnode-rpc.rule=Host(`devnet.cicd.rootnet.app`) && Path(`/`)"
      - "traefik.http.routers.bootnode-rpc.entrypoints=substrate-rpc"
      - "traefik.http.routers.bootnode-rpc.service=node-rpc-svc"
      - "traefik.http.services.node-rpc-svc.loadbalancer.server.port=9944"
      - "traefik.http.middlewares.bootnode-rpc.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.http.middlewares.bootnode-rpc.headers.customrequestheaders.Connection=Upgrade"
      - "traefik.http.routers.bootnode-rpc.tls=true"
      - "traefik.http.routers.bootnode-rpc.tls.certresolver=myresolver"

  validator1:
    image: "ghcr.io/futureversecom/fork-release-state-${NETWORK:-root}"
    # image: zeeshans/seed:live-state-root
    command:
      - "/output/binary"
      - "--chain=/output/fork.json"
      - "--name=validator1"
      - "--validator"
      - "--bob"
      - "--tmp"
      - "--unsafe-rpc-external"
      - "--rpc-cors=all"
      - "--rpc-port=9944"
      - "--bootnodes=/dns/bootnode/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp"
    deploy:
      resources:
        reservations:
          cpus: "0.1"
          memory: "512M"
        limits:
          cpus: "1"
          memory: "2512M"
    depends_on:
      - bootnode
    labels:
      # RPC config
      # - "traefik.http.routers.validator-1-rpc.rule=(Host(`127.0.0.1`) || Host(`devnet.cicd.rootnet.app`)) && PathPrefix(`/`)"
      - "traefik.http.routers.validator-1-rpc.rule=Host(`devnet.cicd.rootnet.app`) && Path(`/`)"
      - "traefik.http.routers.validator-1-rpc.entrypoints=substrate-rpc"
      - "traefik.http.routers.validator-1-rpc.service=node-rpc-svc"
      - "traefik.http.services.node-rpc-svc.loadbalancer.server.port=9944"
      - "traefik.http.middlewares.validator-1-rpc.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.http.middlewares.validator-1-rpc.headers.customrequestheaders.Connection=Upgrade"
      - "traefik.http.routers.validator-1-rpc.tls=true"
      - "traefik.http.routers.validator-1-rpc.tls.certresolver=myresolver"
  
  validator2:
    image: "ghcr.io/futureversecom/fork-release-state-${NETWORK:-root}"
    # image: zeeshans/seed:live-state-root
    command:
      - "/output/binary"
      - "--chain=/output/fork.json"
      - "--name=validator2"
      - "--validator"
      - "--charlie"
      - "--tmp"
      - "--unsafe-rpc-external"
      - "--rpc-cors=all"
      - "--rpc-port=9944"
      - "--bootnodes=/dns/bootnode/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp"
    deploy:
      resources:
        reservations:
          cpus: "0.1"
          memory: "512M"
        limits:
          cpus: "1"
          memory: "2512M"
    depends_on:
      - bootnode
    labels:
      # RPC config
      # - "traefik.http.routers.validator-2-rpc.rule=(Host(`127.0.0.1`) || Host(`devnet.cicd.rootnet.app`)) && PathPrefix(`/`)"
      - "traefik.http.routers.validator-2-rpc.rule=Host(`devnet.cicd.rootnet.app`) && Path(`/`)"
      - "traefik.http.routers.validator-2-rpc.entrypoints=substrate-rpc"
      - "traefik.http.routers.validator-2-rpc.service=node-rpc-svc"
      - "traefik.http.services.node-rpc-svc.loadbalancer.server.port=9944"
      - "traefik.http.middlewares.validator-2-rpc.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.http.middlewares.validator-2-rpc.headers.customrequestheaders.Connection=Upgrade"
      - "traefik.http.routers.validator-2-rpc.tls=true"
      - "traefik.http.routers.validator-2-rpc.tls.certresolver=myresolver"

# network already exists - attach to existing traefik network
networks:
  default:
    external:
      name: "traefik_default"
