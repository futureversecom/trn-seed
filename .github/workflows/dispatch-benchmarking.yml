
name: Dispatch Benchmarks

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name'
        required: true
      pallets:
        description: 'Space-separated list of pallet names (runs all if left empty)'
        required: false

jobs:
  benchmarks:
    runs-on: [seed-builder]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      # - name: Install toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: nightly-2023-04-15
      #     components: rustfmq
      #     target: wasm32-unknown-unknown
      #     default: true

      # Rust required to run benchmarks; use from CI machine
      - name: Install toolchain
        run: rustup show

      - name: Run benchmarks
        run: |
          PALLET_INPUT=${{ github.event.inputs.pallets }}
          if [ -z "$PALLET_INPUT" ]
          then
            ./scripts/run_benchmarks.sh
          else
            IFS=' ' read -ra PALLET_ARRAY <<< "$PALLET_INPUT"
            PALLET_ARGS=""
            for i in "${PALLET_ARRAY[@]}"; do
              PALLET_ARGS+="-p $i "
            done
            ./scripts/run_benchmarks.sh $PALLET_ARGS
          fi

      - name: Display changes
        run: git status

      - name: Setup Git and Commit to branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          PALLET_INPUT=${{ github.event.inputs.pallets }}
          git add -A
          if [ -z "$PALLET_INPUT" ]
          then
            git commit -m "Update all benchmarks on ${{ github.event.inputs.branch }}"
          else
            git commit -m "Update benchmarks for $PALLET_INPUT on ${{ github.event.inputs.branch }}"
          fi
          git push origin ${{ github.event.inputs.branch }}

