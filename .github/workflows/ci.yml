name: CI
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - release/*
      - trunk/*
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**.lock"
      - "chain-specs/**"
      - ".github/workflows/*.yml"
  push:
    branches:
      - trunk/*
      - release/*
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**.lock"
      - "chain-specs/**"
      - ".github/workflows/*.yml"

jobs:
  # format-build-test:
  #   runs-on: [self-hosted]
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v3
  #     - name: Install toolchain
  #       run: rustup show
  #     - name: Format
  #       run: |
  #         cargo -V
  #         cargo fmt --all -- --check
  #     - name: Check
  #       run: |
  #         cargo -V
  #         cargo check --release --all-features
  #     - name: Test
  #       run: |
  #         cargo -V
  #         cargo test --workspace --all-features
  #     #- name: Benchmark (build only)
  #     #  run: cargo check --features=runtime-benchmarks
  
  e2e:
    runs-on: [linux]
    steps:
      - name: Cleanup # https://github.com/actions/checkout/issues/211#issuecomment-1300522915
        uses: AutoModality/action-clean@v1

      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Change dir"
        run: "cd e2e/"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          node-version: "lts/*"
          # cache: "yarn"

      - name: "Install yarn globally"
        run: "npm install -g yarn"

      - name: "Install the dependencies"
        run: "yarn install --immutable --prefer-offline"

      - name: "Format the code"
        run: "yarn format"

      - name: "Lint the code"
        run: "yarn lint:ts"

      - name: "Add lint summary"
        run: |
          echo "## Lint results" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY

      - name: "Build & move seed binary"
        run: |
          cargo build
          mv ./target/debug/seed ./

      - name: "Create docker image"
        run: "docker build -t seed/pr -f Dockerfile.ci ."

      - name: "Compile the contracts and generate the TypeChain bindings"
        run: "yarn hardhat compile"

      - name: "Test the contracts"
        run: "yarn test"

      # - name: "Test the contracts and generate the coverage report"
      #   run: "yarn coverage"

      # - name: "Add test summary"
      #   run: |
      #     echo "## Test results" >> $GITHUB_STEP_SUMMARY

