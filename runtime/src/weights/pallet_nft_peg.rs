
//! Autogenerated weights for `pallet_nft_peg`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Xiankuns-MBP-2`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_nft_peg
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output/pallet_nft_peg.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_nft_peg`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_nft_peg::WeightInfo for WeightInfo<T> {
	/// Storage: NftPeg ContractAddress (r:0 w:1)
	/// Proof: NftPeg ContractAddress (max_values: Some(1), max_size: Some(20), added: 515, mode: MaxEncodedLen)
	fn set_contract_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_000_000 picoseconds.
		Weight::from_parts(8_000_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft CollectionInfo (r:1 w:1)
	/// Proof Skipped: Nft CollectionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: Nft TokenLocks (r:3 w:0)
	/// Proof Skipped: Nft TokenLocks (max_values: None, max_size: None, mode: Measured)
	/// Storage: NftPeg RootNftToErc721 (r:1 w:0)
	/// Proof: NftPeg RootNftToErc721 (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: NftPeg ContractAddress (r:1 w:0)
	/// Proof: NftPeg ContractAddress (max_values: Some(1), max_size: Some(20), added: 515, mode: MaxEncodedLen)
	/// Storage: EthBridge NextEventProofId (r:1 w:1)
	/// Proof Skipped: EthBridge NextEventProofId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EthBridge NotaryKeys (r:1 w:0)
	/// Proof Skipped: EthBridge NotaryKeys (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EthBridge NotarySetId (r:1 w:0)
	/// Proof Skipped: EthBridge NotarySetId (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EthBridge BridgePaused (r:1 w:0)
	/// Proof Skipped: EthBridge BridgePaused (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Digest (r:1 w:1)
	/// Proof Skipped: System Digest (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: TokenApprovals ERC721Approvals (r:0 w:3)
	/// Proof: TokenApprovals ERC721Approvals (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `700`
		//  Estimated: `29207`
		// Minimum execution time: 62_000_000 picoseconds.
		Weight::from_parts(64_000_000, 0)
			.saturating_add(Weight::from_parts(0, 29207))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(6))
	}
}
