//! Autogenerated weights for `pallet_erc20_peg`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-18, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-101-56`, CPU: `Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_erc20_peg
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output/pallet_erc20_peg.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_erc20_peg`.
pub struct WeightInfo<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_erc20_peg::WeightInfo for WeightInfo<T> {
    // Storage: Erc20Peg DepositsActive (r:0 w:1)
    fn activate_deposits() -> Weight {
        Weight::from_ref_time(8_446_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
    // Storage: Erc20Peg WithdrawalsActive (r:0 w:1)
    fn activate_withdrawals() -> Weight {
        Weight::from_ref_time(8_416_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
    // Storage: Erc20Peg WithdrawalsActive (r:1 w:0)
    // Storage: Erc20Peg AssetIdToErc20 (r:1 w:0)
    // Storage: Erc20Peg PaymentDelay (r:1 w:0)
    // Storage: Assets Asset (r:1 w:1)
    // Storage: Assets Account (r:1 w:1)
    // Storage: Erc20Peg ContractAddress (r:1 w:0)
    // Storage: EthBridge NextEventProofId (r:1 w:1)
    // Storage: EthBridge NotaryKeys (r:1 w:0)
    // Storage: EthBridge NotarySetId (r:1 w:0)
    // Storage: EthBridge BridgePaused (r:1 w:0)
    // Storage: System Digest (r:1 w:1)
    fn withdraw() -> Weight {
        Weight::from_ref_time(86_775_000 as u64)
            .saturating_add(T::DbWeight::get().reads(11 as u64))
            .saturating_add(T::DbWeight::get().writes(4 as u64))
    }
    // Storage: Erc20Peg ContractAddress (r:0 w:1)
    fn set_contract_address() -> Weight {
        Weight::from_ref_time(21_040_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
    // Storage: Erc20Peg Erc20Meta (r:0 w:1)
    /// The range of component `p` is `[1, 500]`.
    fn set_erc20_meta(p: u32) -> Weight {
        Weight::from_ref_time(10_049_000 as u64)
            // Standard Error: 492
            .saturating_add(Weight::from_ref_time(1_496_950 as u64).saturating_mul(p as u64))
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
    // Storage: Erc20Peg PaymentDelay (r:0 w:1)
    fn set_payment_delay() -> Weight {
        Weight::from_ref_time(20_560_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
}
