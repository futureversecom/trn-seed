
//! Autogenerated weights for `pallet_erc20_peg`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-01-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `fedora`, CPU: `13th Gen Intel(R) Core(TM) i7-13700K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_erc20_peg
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_erc20_peg`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_erc20_peg::WeightInfo for WeightInfo<T> {
	// Storage: Erc20Peg DepositsActive (r:0 w:1)
	fn activate_deposits() -> Weight {
		(2_500_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:0 w:1)
	fn activate_withdrawals() -> Weight {
		(2_412_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:1 w:0)
	// Storage: Erc20Peg AssetIdToErc20 (r:1 w:0)
	// Storage: Erc20Peg PaymentDelay (r:1 w:0)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: Erc20Peg ContractAddress (r:1 w:0)
	// Storage: EthBridge NextEventProofId (r:1 w:1)
	// Storage: EthBridge NotaryKeys (r:1 w:0)
	// Storage: EthBridge NotarySetId (r:1 w:0)
	// Storage: EthBridge BridgePaused (r:1 w:0)
	// Storage: System Digest (r:1 w:1)
	fn withdraw() -> Weight {
		(42_406_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Erc20Peg ContractAddress (r:0 w:1)
	fn set_contract_address() -> Weight {
		(8_079_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg Erc20Meta (r:0 w:1)
	fn set_erc20_meta() -> Weight {
		(2_893_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Peg PaymentDelay (r:0 w:1)
	fn set_payment_delay() -> Weight {
		(8_240_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
