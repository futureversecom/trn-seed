
//! Autogenerated weights for `pallet_erc20_peg`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-102-147`, CPU: `Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-erc20-peg
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./runtime/src/weights/pallet_erc20_peg.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_erc20_peg`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_erc20_peg::WeightInfo for WeightInfo<T> {
	// Storage: Erc20Peg DepositsActive (r:0 w:1)
	fn activate_deposits() -> Weight {
		Weight::from_all(14_946_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:0 w:1)
	fn activate_withdrawals() -> Weight {
		Weight::from_all(14_815_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg DepositsDelayActive (r:0 w:1)
	fn activate_deposits_delay() -> Weight {
		Weight::from_all(37_003_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg WithdrawalsDelayActive (r:0 w:1)
	fn activate_withdrawals_delay() -> Weight {
		Weight::from_all(36_122_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg WithdrawalsActive (r:1 w:0)
	// Storage: Erc20Peg AssetIdToErc20 (r:1 w:0)
	// Storage: Erc20Peg PaymentDelay (r:1 w:0)
	// Storage: Erc20Peg WithdrawalsDelayActive (r:1 w:0)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: Erc20Peg ContractAddress (r:1 w:0)
	// Storage: EthBridge NextEventProofId (r:1 w:1)
	// Storage: EthBridge NotaryKeys (r:1 w:0)
	// Storage: EthBridge NotarySetId (r:1 w:0)
	// Storage: EthBridge BridgePaused (r:1 w:0)
	// Storage: System Digest (r:1 w:1)
	fn withdraw() -> Weight {
		Weight::from_all(162_298_000 as u64)
			.saturating_add(T::DbWeight::get().reads(12 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Erc20Peg ContractAddress (r:0 w:1)
	fn set_erc20_peg_address() -> Weight {
		Weight::from_all(38_786_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg RootPegContractAddress (r:0 w:1)
	fn set_root_peg_address() -> Weight {
		Weight::from_all(38_297_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg Erc20ToAssetId (r:0 w:1)
	// Storage: Erc20Peg AssetIdToErc20 (r:0 w:1)
	fn set_erc20_asset_map() -> Weight {
		Weight::from_all(19_394_000 as u64)
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Erc20Peg Erc20Meta (r:0 w:1)
	fn set_erc20_meta() -> Weight {
		Weight::from_all(18_502_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Erc20Peg PaymentDelay (r:0 w:1)
	fn set_payment_delay() -> Weight {
		Weight::from_all(39_048_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
