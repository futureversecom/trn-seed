
//! Autogenerated weights for `pallet_ethy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-05-17, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Jasons-Ubuntu`, CPU: `AMD Ryzen 9 7950X 16-Core Processor`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-ethy
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./runtime/src/weights/pallet_ethy.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_ethy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_ethy::WeightInfo for WeightInfo<T> {
	/// Storage: `EthBridge::NotaryKeys` (r:1 w:0)
	/// Proof: `EthBridge::NotaryKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::XrplDoorSigners` (r:1 w:19)
	/// Proof: `EthBridge::XrplDoorSigners` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotaryXrplKeys` (r:0 w:1)
	/// Proof: `EthBridge::NotaryXrplKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `p` is `[1, 19]`.
	fn set_xrpl_door_signers(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `199`
		//  Estimated: `3664`
		// Minimum execution time: 14_848_000 picoseconds.
		Weight::from_parts(13_767_852, 0)
			.saturating_add(Weight::from_parts(0, 3664))
			// Standard Error: 18_255
			.saturating_add(Weight::from_parts(1_377_756, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p.into())))
	}
	/// Storage: `EthBridge::RelayerPaidBond` (r:1 w:0)
	/// Proof: `EthBridge::RelayerPaidBond` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Relayer` (r:0 w:1)
	/// Proof: `EthBridge::Relayer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_relayer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `214`
		//  Estimated: `3679`
		// Minimum execution time: 11_121_000 picoseconds.
		Weight::from_parts(11_472_000, 0)
			.saturating_add(Weight::from_parts(0, 3679))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::RelayerPaidBond` (r:1 w:1)
	/// Proof: `EthBridge::RelayerPaidBond` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetsExt::Holds` (r:1 w:1)
	/// Proof: `AssetsExt::Holds` (`max_values`: None, `max_size`: Some(433), added: 2908, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(162), added: 2637, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(110), added: 2585, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn deposit_relayer_bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1180`
		//  Estimated: `6172`
		// Minimum execution time: 66_926_000 picoseconds.
		Weight::from_parts(68_139_000, 0)
			.saturating_add(Weight::from_parts(0, 6172))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `EthBridge::Relayer` (r:1 w:0)
	/// Proof: `EthBridge::Relayer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RelayerPaidBond` (r:1 w:1)
	/// Proof: `EthBridge::RelayerPaidBond` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetsExt::Holds` (r:1 w:1)
	/// Proof: `AssetsExt::Holds` (`max_values`: None, `max_size`: Some(433), added: 2908, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(162), added: 2637, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(110), added: 2585, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn withdraw_relayer_bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1345`
		//  Estimated: `6172`
		// Minimum execution time: 70_073_000 picoseconds.
		Weight::from_parts(71_315_000, 0)
			.saturating_add(Weight::from_parts(0, 6172))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `EthBridge::EventBlockConfirmations` (r:0 w:1)
	/// Proof: `EthBridge::EventBlockConfirmations` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_event_block_confirmations() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_062_000 picoseconds.
		Weight::from_parts(6_252_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::DelayedEventProofsPerBlock` (r:0 w:1)
	/// Proof: `EthBridge::DelayedEventProofsPerBlock` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_delayed_event_proofs_per_block() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_791_000 picoseconds.
		Weight::from_parts(6_141_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::ChallengePeriod` (r:0 w:1)
	/// Proof: `EthBridge::ChallengePeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_challenge_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_852_000 picoseconds.
		Weight::from_parts(6_181_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::ContractAddress` (r:0 w:1)
	/// Proof: `EthBridge::ContractAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_contract_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_563_000 picoseconds.
		Weight::from_parts(6_832_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::BridgePaused` (r:1 w:1)
	/// Proof: `EthBridge::BridgePaused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_bridge_paused() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `146`
		//  Estimated: `1631`
		// Minimum execution time: 8_306_000 picoseconds.
		Weight::from_parts(8_586_000, 0)
			.saturating_add(Weight::from_parts(0, 1631))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::NotarySetId` (r:1 w:1)
	/// Proof: `EthBridge::NotarySetId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:1)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgePaused` (r:1 w:1)
	/// Proof: `EthBridge::BridgePaused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::XrplDoorSigners` (r:1 w:0)
	/// Proof: `EthBridge::XrplDoorSigners` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AuthoritiesChangedThisEra` (r:0 w:1)
	/// Proof: `EthBridge::AuthoritiesChangedThisEra` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotaryXrplKeys` (r:0 w:1)
	/// Proof: `EthBridge::NotaryXrplKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotaryKeys` (r:0 w:1)
	/// Proof: `EthBridge::NotaryKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn finalise_authorities_change() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `195`
		//  Estimated: `3660`
		// Minimum execution time: 14_438_000 picoseconds.
		Weight::from_parts(14_879_000, 0)
			.saturating_add(Weight::from_parts(0, 3660))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `EthBridge::MissedMessageIds` (r:1 w:1)
	/// Proof: `EthBridge::MissedMessageIds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_missing_event_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `220`
		//  Estimated: `1705`
		// Minimum execution time: 10_459_000 picoseconds.
		Weight::from_parts(10_710_000, 0)
			.saturating_add(Weight::from_parts(0, 1705))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::Relayer` (r:1 w:0)
	/// Proof: `EthBridge::Relayer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::MissedMessageIds` (r:1 w:0)
	/// Proof: `EthBridge::MissedMessageIds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingEventClaims` (r:1 w:1)
	/// Proof: `EthBridge::PendingEventClaims` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ChallengePeriod` (r:1 w:0)
	/// Proof: `EthBridge::ChallengePeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::MessagesValidAt` (r:1 w:1)
	/// Proof: `EthBridge::MessagesValidAt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingClaimStatus` (r:0 w:1)
	/// Proof: `EthBridge::PendingClaimStatus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_missing_event() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `217`
		//  Estimated: `3682`
		// Minimum execution time: 22_152_000 picoseconds.
		Weight::from_parts(22_583_000, 0)
			.saturating_add(Weight::from_parts(0, 3682))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `EthBridge::Relayer` (r:1 w:0)
	/// Proof: `EthBridge::Relayer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ProcessedMessageIds` (r:1 w:0)
	/// Proof: `EthBridge::ProcessedMessageIds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingEventClaims` (r:1 w:1)
	/// Proof: `EthBridge::PendingEventClaims` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ChallengePeriod` (r:1 w:0)
	/// Proof: `EthBridge::ChallengePeriod` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::MessagesValidAt` (r:1 w:1)
	/// Proof: `EthBridge::MessagesValidAt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingClaimStatus` (r:0 w:1)
	/// Proof: `EthBridge::PendingClaimStatus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_event() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `186`
		//  Estimated: `3651`
		// Minimum execution time: 19_457_000 picoseconds.
		Weight::from_parts(19_958_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `EthBridge::PendingEventClaims` (r:1 w:0)
	/// Proof: `EthBridge::PendingEventClaims` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingClaimStatus` (r:1 w:1)
	/// Proof: `EthBridge::PendingClaimStatus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetsExt::Holds` (r:1 w:1)
	/// Proof: `AssetsExt::Holds` (`max_values`: None, `max_size`: Some(433), added: 2908, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(162), added: 2637, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(110), added: 2585, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::PendingClaimChallenges` (r:1 w:1)
	/// Proof: `EthBridge::PendingClaimChallenges` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ChallengerAccount` (r:0 w:1)
	/// Proof: `EthBridge::ChallengerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_challenge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1314`
		//  Estimated: `6172`
		// Minimum execution time: 75_583_000 picoseconds.
		Weight::from_parts(76_645_000, 0)
			.saturating_add(Weight::from_parts(0, 6172))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `EthBridge::NotaryKeys` (r:1 w:0)
	/// Proof: `EthBridge::NotaryKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingClaimStatus` (r:1 w:1)
	/// Proof: `EthBridge::PendingClaimStatus` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::EventNotarizations` (r:2 w:1)
	/// Proof: `EthBridge::EventNotarizations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingClaimChallenges` (r:1 w:1)
	/// Proof: `EthBridge::PendingClaimChallenges` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingEventClaims` (r:1 w:0)
	/// Proof: `EthBridge::PendingEventClaims` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Relayer` (r:1 w:0)
	/// Proof: `EthBridge::Relayer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ChallengerAccount` (r:1 w:1)
	/// Proof: `EthBridge::ChallengerAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetsExt::Holds` (r:1 w:1)
	/// Proof: `AssetsExt::Holds` (`max_values`: None, `max_size`: Some(433), added: 2908, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(162), added: 2637, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(110), added: 2585, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn submit_notarization() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1689`
		//  Estimated: `7629`
		// Minimum execution time: 104_207_000 picoseconds.
		Weight::from_parts(106_491_000, 0)
			.saturating_add(Weight::from_parts(0, 7629))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `EthBridge::NextNotaryKeys` (r:1 w:0)
	/// Proof: `EthBridge::NextNotaryKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotarySetId` (r:1 w:0)
	/// Proof: `EthBridge::NotarySetId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::ContractAddress` (r:1 w:0)
	/// Proof: `EthBridge::ContractAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NextEventProofId` (r:1 w:1)
	/// Proof: `EthBridge::NextEventProofId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotaryKeys` (r:1 w:0)
	/// Proof: `EthBridge::NotaryKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgePaused` (r:1 w:1)
	/// Proof: `EthBridge::BridgePaused` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:1)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::XrplDoorSigners` (r:1 w:0)
	/// Proof: `EthBridge::XrplDoorSigners` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotaryXrplKeys` (r:1 w:0)
	/// Proof: `EthBridge::NotaryXrplKeys` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `XRPLBridge::DoorAddress` (r:1 w:0)
	/// Proof: `XRPLBridge::DoorAddress` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::NextAuthorityChange` (r:0 w:1)
	/// Proof: `EthBridge::NextAuthorityChange` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AuthoritiesChangedThisEra` (r:0 w:1)
	/// Proof: `EthBridge::AuthoritiesChangedThisEra` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::NotarySetProofId` (r:0 w:1)
	/// Proof: `EthBridge::NotarySetProofId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn handle_authorities_change() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `481`
		//  Estimated: `3946`
		// Minimum execution time: 41_689_000 picoseconds.
		Weight::from_parts(42_971_000, 0)
			.saturating_add(Weight::from_parts(0, 3946))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(6))
	}
}
