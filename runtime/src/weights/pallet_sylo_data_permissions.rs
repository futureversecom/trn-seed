
//! Autogenerated weights for `pallet_sylo_data_permissions`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2025-05-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Johns-Macbook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-sylo-data-permissions
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./runtime/src/weights/pallet_sylo_data_permissions.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_sylo_data_permissions`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_sylo_data_permissions::WeightInfo for WeightInfo<T> {
	/// Storage: `SyloDataPermissions::NextPermissionRecordId` (r:1 w:1)
	/// Proof: `SyloDataPermissions::NextPermissionRecordId` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataVerification::ValidationRecords` (r:1 w:0)
	/// Proof: `SyloDataVerification::ValidationRecords` (`max_values`: None, `max_size`: Some(19724), added: 22199, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::PermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::PermissionRecords` (`max_values`: None, `max_size`: Some(4068), added: 6543, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 100]`.
	fn grant_data_permissions(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `294`
		//  Estimated: `23189`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(20_577_179, 0)
			.saturating_add(Weight::from_parts(0, 23189))
			// Standard Error: 96_170
			.saturating_add(Weight::from_parts(15_972_387, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `SyloDataPermissions::PermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::PermissionRecords` (`max_values`: None, `max_size`: Some(4068), added: 6543, mode: `MaxEncodedLen`)
	fn revoke_data_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `240`
		//  Estimated: `7533`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(23_000_000, 0)
			.saturating_add(Weight::from_parts(0, 7533))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `SyloDataPermissions::NextPermissionRecordId` (r:1 w:1)
	/// Proof: `SyloDataPermissions::NextPermissionRecordId` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::TaggedPermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::TaggedPermissionRecords` (`max_values`: None, `max_size`: Some(503658), added: 506133, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 100]`.
	fn grant_tagged_permissions(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `507123`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(22_915_934, 0)
			.saturating_add(Weight::from_parts(0, 507123))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `SyloDataPermissions::TaggedPermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::TaggedPermissionRecords` (`max_values`: None, `max_size`: Some(503658), added: 506133, mode: `MaxEncodedLen`)
	fn revoke_tagged_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `207`
		//  Estimated: `507123`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 0)
			.saturating_add(Weight::from_parts(0, 507123))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `SyloDataVerification::ValidationRecords` (r:1 w:0)
	/// Proof: `SyloDataVerification::ValidationRecords` (`max_values`: None, `max_size`: Some(19724), added: 22199, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::PermissionReferences` (r:1 w:1)
	/// Proof: `SyloDataPermissions::PermissionReferences` (`max_values`: None, `max_size`: Some(558), added: 3033, mode: `MaxEncodedLen`)
	fn grant_permission_reference() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `294`
		//  Estimated: `23189`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(20_000_000, 0)
			.saturating_add(Weight::from_parts(0, 23189))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `SyloDataPermissions::PermissionReferences` (r:1 w:1)
	/// Proof: `SyloDataPermissions::PermissionReferences` (`max_values`: None, `max_size`: Some(558), added: 3033, mode: `MaxEncodedLen`)
	fn revoke_permission_reference() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `4023`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 0)
			.saturating_add(Weight::from_parts(0, 4023))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `SyloDataPermissions::ExpiringPermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::ExpiringPermissionRecords` (`max_values`: None, `max_size`: Some(5473), added: 7948, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::PermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::PermissionRecords` (`max_values`: None, `max_size`: Some(4068), added: 6543, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::ExpiringTaggedPermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::ExpiringTaggedPermissionRecords` (`max_values`: None, `max_size`: Some(453), added: 2928, mode: `MaxEncodedLen`)
	/// Storage: `SyloDataPermissions::TaggedPermissionRecords` (r:1 w:1)
	/// Proof: `SyloDataPermissions::TaggedPermissionRecords` (`max_values`: None, `max_size`: Some(503658), added: 506133, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 10]`.
	/// The range of component `q` is `[1, 10]`.
	fn on_initialize(p: u32, _q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `365 + p * (147 Â±0)`
		//  Estimated: `507123`
		// Minimum execution time: 31_000_000 picoseconds.
		Weight::from_parts(15_285_959, 0)
			.saturating_add(Weight::from_parts(0, 507123))
			// Standard Error: 27_553
			.saturating_add(Weight::from_parts(17_112_767, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
}
