
//! Autogenerated weights for `pallet_doughnut`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-01-23, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `Jasons-Ubuntu`, CPU: `AMD Ryzen 9 7950X 16-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain
// dev
// --steps=50
// --repeat=20
// --pallet=pallet_doughnut
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_doughnut`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_doughnut::WeightInfo for WeightInfo<T> {
    // Storage: Doughnut BlockedDoughnuts (r:1 w:0)
    // Storage: Doughnut BlockedHolders (r:1 w:0)
    // Storage: MaintenanceMode BlockedCalls (r:1 w:0)
    // Storage: MaintenanceMode BlockedPallets (r:1 w:0)
    fn transact() -> Weight {
        Weight::from_ref_time(192_694_000 as u64)
            .saturating_add(T::DbWeight::get().reads(4 as u64))
    }
    // Storage: Doughnut BlockedDoughnuts (r:0 w:1)
    fn revoke_doughnut() -> Weight {
        Weight::from_ref_time(13_706_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
    // Storage: Doughnut BlockedHolders (r:0 w:1)
    fn revoke_holder() -> Weight {
        Weight::from_ref_time(4_678_000 as u64)
            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
}
