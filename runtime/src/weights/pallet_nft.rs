
//! Autogenerated weights for `pallet_nft`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-03, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `fedora`, CPU: `13th Gen Intel(R) Core(TM) i7-13700K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_nft
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./output

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_nft`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_nft::WeightInfo for WeightInfo<T> {
	// Storage: Nft CollectionInfo (r:1 w:1)
	fn claim_unowned_collection() -> Weight {
		(11_265_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:1)
	fn set_owner() -> Weight {
		(12_035_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Nft NextMarketplaceId (r:1 w:1)
	// Storage: Nft RegisteredMarketplaces (r:0 w:1)
	fn register_marketplace() -> Weight {
		(11_603_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Nft NextCollectionId (r:1 w:1)
	// Storage: EVM AccountCodes (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Nft CollectionInfo (r:0 w:1)
	fn create_collection() -> Weight {
		(20_828_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:1)
	fn mint() -> Weight {
		(13_692_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:1)
	// Storage: Nft TokenLocks (r:1 w:0)
	// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	fn transfer() -> Weight {
		(15_660_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Nft TokenLocks (r:1 w:0)
	// Storage: Nft CollectionInfo (r:1 w:1)
	// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	fn burn() -> Weight {
		(14_915_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:0)
	// Storage: Nft NextListingId (r:1 w:1)
	// Storage: Nft TokenLocks (r:1 w:1)
	// Storage: Nft Listings (r:0 w:1)
	// Storage: Nft ListingEndSchedule (r:0 w:1)
	// Storage: Nft OpenCollectionListings (r:0 w:1)
	fn sell() -> Weight {
		(25_940_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Nft Listings (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:2 w:2)
	// Storage: Nft CollectionInfo (r:1 w:1)
	// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	// Storage: Nft TokenLocks (r:0 w:1)
	// Storage: Nft ListingWinningBid (r:0 w:1)
	// Storage: Nft ListingEndSchedule (r:0 w:1)
	// Storage: Nft OpenCollectionListings (r:0 w:1)
	fn buy() -> Weight {
		(52_727_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:0)
	// Storage: Nft NextListingId (r:1 w:1)
	// Storage: Nft TokenLocks (r:1 w:1)
	// Storage: Nft Listings (r:0 w:1)
	// Storage: Nft ListingEndSchedule (r:0 w:1)
	// Storage: Nft OpenCollectionListings (r:0 w:1)
	fn auction() -> Weight {
		(25_891_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Nft Listings (r:1 w:1)
	// Storage: Nft ListingWinningBid (r:1 w:1)
	// Storage: AssetsExt Holds (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:2 w:2)
	// Storage: System Account (r:2 w:2)
	// Storage: Nft ListingEndSchedule (r:0 w:2)
	fn bid() -> Weight {
		(57_422_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	// Storage: Nft Listings (r:1 w:1)
	// Storage: Nft TokenLocks (r:0 w:1)
	// Storage: Nft ListingEndSchedule (r:0 w:1)
	// Storage: Nft OpenCollectionListings (r:0 w:1)
	fn cancel_sale() -> Weight {
		(15_793_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Nft Listings (r:1 w:1)
	fn update_fixed_price() -> Weight {
		(13_442_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Nft CollectionInfo (r:1 w:0)
	// Storage: Nft NextOfferId (r:1 w:1)
	// Storage: Nft TokenLocks (r:1 w:0)
	// Storage: AssetsExt Holds (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Nft TokenOffers (r:1 w:1)
	// Storage: Nft Offers (r:0 w:1)
	fn make_simple_offer() -> Weight {
		(53_913_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	// Storage: Nft Offers (r:1 w:1)
	// Storage: AssetsExt Holds (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Nft TokenOffers (r:1 w:1)
	fn cancel_offer() -> Weight {
		(47_427_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Nft Offers (r:1 w:1)
	// Storage: Nft CollectionInfo (r:1 w:1)
	// Storage: AssetsExt Holds (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Nft TokenLocks (r:1 w:0)
	// Storage: Nft TokenOffers (r:1 w:1)
	// Storage: TokenApprovals ERC721Approvals (r:0 w:1)
	fn accept_offer() -> Weight {
		(67_928_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
}
