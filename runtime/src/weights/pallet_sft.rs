
//! Autogenerated weights for `pallet_sft`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-102-147`, CPU: `Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_sft
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./runtime/src/weights/pallet_sft.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_sft`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_sft::WeightInfo for WeightInfo<T> {
	// Storage: Nft NextCollectionId (r:1 w:1)
	// Storage: EVM AccountCodes (r:1 w:1)
	// Storage: Futurepass DefaultProxy (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Sft SftCollectionInfo (r:0 w:1)
	fn create_collection() -> Weight {
		Weight::from_ref_time(97_485_000 as u64)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:1)
	// Storage: Sft TokenInfo (r:0 w:1)
	fn create_token() -> Weight {
		Weight::from_ref_time(68_303_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:0)
	// Storage: Sft TokenInfo (r:1 w:1)
	fn mint() -> Weight {
		Weight::from_ref_time(69_085_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft TokenInfo (r:1 w:1)
	fn transfer() -> Weight {
		Weight::from_ref_time(64_386_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft TokenInfo (r:1 w:1)
	fn burn() -> Weight {
		Weight::from_ref_time(67_249_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:1)
	fn set_owner() -> Weight {
		Weight::from_ref_time(60_343_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:0)
	// Storage: Sft TokenInfo (r:1 w:1)
	fn set_max_issuance() -> Weight {
		Weight::from_ref_time(62_071_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:1)
	fn set_base_uri() -> Weight {
		Weight::from_ref_time(56_389_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft SftCollectionInfo (r:1 w:1)
	fn set_name() -> Weight {
		Weight::from_ref_time(56_311_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft CollectionInfo (r:1 w:1)
	fn set_royalties_schedule() -> Weight {
		Weight::from_ref_time(68_177_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}

	// Storage: Sft CollectionInfo (r:1 w:0)
	// Storage: Sft PublicMintInfo (r:1 w:1)
	fn toggle_public_mint() -> Weight {
		Weight::from_ref_time(62_779_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Sft CollectionInfo (r:1 w:0)
	// Storage: Sft PublicMintInfo (r:1 w:1)
	fn set_mint_fee() -> Weight {
		Weight::from_ref_time(63_055_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
