
//! Autogenerated weights for `pallet_sylo`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2025-01-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Johns-Macbook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/seed
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-sylo
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./runtime/src/weights/pallet_sylo.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_sylo`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_sylo::WeightInfo for WeightInfo<T> {
	/// Storage: `Sylo::Resolvers` (r:1 w:1)
	/// Proof: `Sylo::Resolvers` (`max_values`: None, `max_size`: Some(2801), added: 5276, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 250]`.
	/// The range of component `q` is `[1, 10]`.
	fn register_resolver(p: u32, q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `175`
		//  Estimated: `6266`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(12_416_241, 0)
			.saturating_add(Weight::from_parts(0, 6266))
			// Standard Error: 224
			.saturating_add(Weight::from_parts(3_202, 0).saturating_mul(p.into()))
			// Standard Error: 5_847
			.saturating_add(Weight::from_parts(375_131, 0).saturating_mul(q.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::Resolvers` (r:1 w:1)
	/// Proof: `Sylo::Resolvers` (`max_values`: None, `max_size`: Some(2801), added: 5276, mode: `MaxEncodedLen`)
	/// The range of component `q` is `[1, 10]`.
	fn update_resolver(q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `289`
		//  Estimated: `6266`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_038_523, 0)
			.saturating_add(Weight::from_parts(0, 6266))
			// Standard Error: 7_792
			.saturating_add(Weight::from_parts(337_744, 0).saturating_mul(q.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::Resolvers` (r:1 w:1)
	/// Proof: `Sylo::Resolvers` (`max_values`: None, `max_size`: Some(2801), added: 5276, mode: `MaxEncodedLen`)
	fn unregister_resolver() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `289`
		//  Estimated: `6266`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 0)
			.saturating_add(Weight::from_parts(0, 6266))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::ValidationRecords` (r:1 w:1)
	/// Proof: `Sylo::ValidationRecords` (`max_values`: None, `max_size`: Some(11724), added: 14199, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 10]`.
	/// The range of component `q` is `[1, 10]`.
	fn create_validation_record(p: u32, q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `213`
		//  Estimated: `15189`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(15_824_136, 0)
			.saturating_add(Weight::from_parts(0, 15189))
			// Standard Error: 5_825
			.saturating_add(Weight::from_parts(579_912, 0).saturating_mul(p.into()))
			// Standard Error: 5_825
			.saturating_add(Weight::from_parts(88_911, 0).saturating_mul(q.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::ValidationRecords` (r:1 w:1)
	/// Proof: `Sylo::ValidationRecords` (`max_values`: None, `max_size`: Some(11724), added: 14199, mode: `MaxEncodedLen`)
	fn add_validation_record_entry() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `317`
		//  Estimated: `15189`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 0)
			.saturating_add(Weight::from_parts(0, 15189))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::ValidationRecords` (r:1 w:1)
	/// Proof: `Sylo::ValidationRecords` (`max_values`: None, `max_size`: Some(11724), added: 14199, mode: `MaxEncodedLen`)
	/// The range of component `p` is `[1, 10]`.
	/// The range of component `q` is `[1, 10]`.
	fn update_validation_record(p: u32, q: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `351`
		//  Estimated: `15189`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(17_059_519, 0)
			.saturating_add(Weight::from_parts(0, 15189))
			// Standard Error: 6_932
			.saturating_add(Weight::from_parts(866_848, 0).saturating_mul(p.into()))
			// Standard Error: 6_932
			.saturating_add(Weight::from_parts(432_549, 0).saturating_mul(q.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Sylo::ValidationRecords` (r:1 w:1)
	/// Proof: `Sylo::ValidationRecords` (`max_values`: None, `max_size`: Some(11724), added: 14199, mode: `MaxEncodedLen`)
	fn delete_validation_record() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `317`
		//  Estimated: `15189`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 0)
			.saturating_add(Weight::from_parts(0, 15189))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
